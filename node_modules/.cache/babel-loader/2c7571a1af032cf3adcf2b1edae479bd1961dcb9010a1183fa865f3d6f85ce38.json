{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  tasks: [],\n  loading: false,\n  error: null\n};\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      const newTask = {\n        ...action.payload,\n        priority: action.payload.priority || 'medium',\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      state.tasks.push(newTask);\n    },\n    updateTask: (state, action) => {\n      const {\n        id,\n        updates\n      } = action.payload;\n      const taskIndex = state.tasks.findIndex(task => task.id === id);\n      if (taskIndex !== -1) {\n        state.tasks[taskIndex] = {\n          ...state.tasks[taskIndex],\n          ...updates,\n          updatedAt: new Date().toISOString()\n        };\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    toggleTaskComplete: (state, action) => {\n      const taskIndex = state.tasks.findIndex(task => task.id === action.payload);\n      if (taskIndex !== -1) {\n        state.tasks[taskIndex].completed = !state.tasks[taskIndex].completed;\n        state.tasks[taskIndex].updatedAt = new Date().toISOString();\n      }\n    }\n  }\n});\nexport const {\n  addTask,\n  updateTask,\n  deleteTask,\n  toggleTaskComplete\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","loading","error","taskSlice","name","reducers","addTask","state","action","newTask","payload","priority","id","Date","now","toString","createdAt","toISOString","updatedAt","push","updateTask","updates","taskIndex","findIndex","task","deleteTask","filter","toggleTaskComplete","completed","actions","reducer"],"sources":["/Users/sabafish1028/Programs/Hobby/task-manager/src/store/taskSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Task, TaskState, Priority } from '../types/task';\n\nconst initialState: TaskState = {\n  tasks: [],\n  loading: false,\n  error: null,\n};\n\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask: (state, action: PayloadAction<Omit<Task, 'id' | 'createdAt' | 'updatedAt'>>) => {\n      const newTask: Task = {\n        ...action.payload,\n        priority: action.payload.priority || 'medium',\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n      state.tasks.push(newTask);\n    },\n    updateTask: (state, action: PayloadAction<{ id: string; updates: Partial<Omit<Task, 'id' | 'createdAt'>> }>) => {\n      const { id, updates } = action.payload;\n      const taskIndex = state.tasks.findIndex(task => task.id === id);\n      if (taskIndex !== -1) {\n        state.tasks[taskIndex] = {\n          ...state.tasks[taskIndex],\n          ...updates,\n          updatedAt: new Date().toISOString(),\n        };\n      }\n    },\n    deleteTask: (state, action: PayloadAction<string>) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    toggleTaskComplete: (state, action: PayloadAction<string>) => {\n      const taskIndex = state.tasks.findIndex(task => task.id === action.payload);\n      if (taskIndex !== -1) {\n        state.tasks[taskIndex].completed = !state.tasks[taskIndex].completed;\n        state.tasks[taskIndex].updatedAt = new Date().toISOString();\n      }\n    },\n  },\n});\n\nexport const { addTask, updateTask, deleteTask, toggleTaskComplete } = taskSlice.actions;\nexport default taskSlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAG7D,MAAMC,YAAuB,GAAG;EAC9BC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAmE,KAAK;MACvF,MAAMC,OAAa,GAAG;QACpB,GAAGD,MAAM,CAACE,OAAO;QACjBC,QAAQ,EAAEH,MAAM,CAACE,OAAO,CAACC,QAAQ,IAAI,QAAQ;QAC7CC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzBC,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;QACnCC,SAAS,EAAE,IAAIL,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC;MACpC,CAAC;MACDV,KAAK,CAACP,KAAK,CAACmB,IAAI,CAACV,OAAO,CAAC;IAC3B,CAAC;IACDW,UAAU,EAAEA,CAACb,KAAK,EAAEC,MAAuF,KAAK;MAC9G,MAAM;QAAEI,EAAE;QAAES;MAAQ,CAAC,GAAGb,MAAM,CAACE,OAAO;MACtC,MAAMY,SAAS,GAAGf,KAAK,CAACP,KAAK,CAACuB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACZ,EAAE,KAAKA,EAAE,CAAC;MAC/D,IAAIU,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBf,KAAK,CAACP,KAAK,CAACsB,SAAS,CAAC,GAAG;UACvB,GAAGf,KAAK,CAACP,KAAK,CAACsB,SAAS,CAAC;UACzB,GAAGD,OAAO;UACVH,SAAS,EAAE,IAAIL,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC;QACpC,CAAC;MACH;IACF,CAAC;IACDQ,UAAU,EAAEA,CAAClB,KAAK,EAAEC,MAA6B,KAAK;MACpDD,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAAC0B,MAAM,CAACF,IAAI,IAAIA,IAAI,CAACZ,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAAC;IACtE,CAAC;IACDiB,kBAAkB,EAAEA,CAACpB,KAAK,EAAEC,MAA6B,KAAK;MAC5D,MAAMc,SAAS,GAAGf,KAAK,CAACP,KAAK,CAACuB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACZ,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAAC;MAC3E,IAAIY,SAAS,KAAK,CAAC,CAAC,EAAE;QACpBf,KAAK,CAACP,KAAK,CAACsB,SAAS,CAAC,CAACM,SAAS,GAAG,CAACrB,KAAK,CAACP,KAAK,CAACsB,SAAS,CAAC,CAACM,SAAS;QACpErB,KAAK,CAACP,KAAK,CAACsB,SAAS,CAAC,CAACJ,SAAS,GAAG,IAAIL,IAAI,CAAC,CAAC,CAACI,WAAW,CAAC,CAAC;MAC7D;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEX,OAAO;EAAEc,UAAU;EAAEK,UAAU;EAAEE;AAAmB,CAAC,GAAGxB,SAAS,CAAC0B,OAAO;AACxF,eAAe1B,SAAS,CAAC2B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst defaultTasks = [{\n  id: '1',\n  title: 'TaskManagerアプリを試してみる',\n  description: '新しく作成したタスク管理アプリの機能を確認してみましょう。タスクの追加、編集、削除、完了の切り替えなど、基本的な機能を試してみてください。',\n  categoryId: '3',\n  // 学習カテゴリーに割り当て\n  priority: 'medium',\n  completed: false,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}];\nconst initialState = {\n  tasks: defaultTasks,\n  loading: false,\n  error: null\n};\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      const newTask = {\n        ...action.payload,\n        priority: action.payload.priority || 'medium',\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      state.tasks.push(newTask);\n    },\n    updateTask: (state, action) => {\n      const {\n        id,\n        updates\n      } = action.payload;\n      const taskIndex = state.tasks.findIndex(task => task.id === id);\n      if (taskIndex !== -1) {\n        state.tasks[taskIndex] = {\n          ...state.tasks[taskIndex],\n          ...updates,\n          updatedAt: new Date().toISOString()\n        };\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    toggleTaskComplete: (state, action) => {\n      const taskIndex = state.tasks.findIndex(task => task.id === action.payload);\n      if (taskIndex !== -1) {\n        state.tasks[taskIndex].completed = !state.tasks[taskIndex].completed;\n        state.tasks[taskIndex].updatedAt = new Date().toISOString();\n      }\n    }\n  }\n});\nexport const {\n  addTask,\n  updateTask,\n  deleteTask,\n  toggleTaskComplete\n} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","defaultTasks","id","title","description","categoryId","priority","completed","createdAt","Date","toISOString","updatedAt","initialState","tasks","loading","error","taskSlice","name","reducers","addTask","state","action","newTask","payload","now","toString","push","updateTask","updates","taskIndex","findIndex","task","deleteTask","filter","toggleTaskComplete","actions","reducer"],"sources":["/Users/sabafish1028/Programs/Hobby/task-manager/src/store/taskSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Task, TaskState, Priority } from '../types/task';\n\nconst defaultTasks: Task[] = [\n  {\n    id: '1',\n    title: 'TaskManagerアプリを試してみる',\n    description: '新しく作成したタスク管理アプリの機能を確認してみましょう。タスクの追加、編集、削除、完了の切り替えなど、基本的な機能を試してみてください。',\n    categoryId: '3', // 学習カテゴリーに割り当て\n    priority: 'medium',\n    completed: false,\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n];\n\nconst initialState: TaskState = {\n  tasks: defaultTasks,\n  loading: false,\n  error: null,\n};\n\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask: (state, action: PayloadAction<Omit<Task, 'id' | 'createdAt' | 'updatedAt'>>) => {\n      const newTask: Task = {\n        ...action.payload,\n        priority: action.payload.priority || 'medium',\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n      state.tasks.push(newTask);\n    },\n    updateTask: (state, action: PayloadAction<{ id: string; updates: Partial<Omit<Task, 'id' | 'createdAt'>> }>) => {\n      const { id, updates } = action.payload;\n      const taskIndex = state.tasks.findIndex(task => task.id === id);\n      if (taskIndex !== -1) {\n        state.tasks[taskIndex] = {\n          ...state.tasks[taskIndex],\n          ...updates,\n          updatedAt: new Date().toISOString(),\n        };\n      }\n    },\n    deleteTask: (state, action: PayloadAction<string>) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    },\n    toggleTaskComplete: (state, action: PayloadAction<string>) => {\n      const taskIndex = state.tasks.findIndex(task => task.id === action.payload);\n      if (taskIndex !== -1) {\n        state.tasks[taskIndex].completed = !state.tasks[taskIndex].completed;\n        state.tasks[taskIndex].updatedAt = new Date().toISOString();\n      }\n    },\n  },\n});\n\nexport const { addTask, updateTask, deleteTask, toggleTaskComplete } = taskSlice.actions;\nexport default taskSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
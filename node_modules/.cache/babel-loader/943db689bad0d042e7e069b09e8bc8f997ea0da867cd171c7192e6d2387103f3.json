{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst defaultCategories = [{\n  id: '1',\n  name: '仕事',\n  color: '#1976d2',\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}, {\n  id: '2',\n  name: 'プライベート',\n  color: '#dc004e',\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}, {\n  id: '3',\n  name: '学習',\n  color: '#388e3c',\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n}];\nconst initialState = {\n  categories: defaultCategories,\n  loading: false,\n  error: null\n};\nconst categorySlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    addCategory: (state, action) => {\n      const newCategory = {\n        ...action.payload,\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      state.categories.push(newCategory);\n    },\n    updateCategory: (state, action) => {\n      const {\n        id,\n        updates\n      } = action.payload;\n      const categoryIndex = state.categories.findIndex(category => category.id === id);\n      if (categoryIndex !== -1) {\n        state.categories[categoryIndex] = {\n          ...state.categories[categoryIndex],\n          ...updates,\n          updatedAt: new Date().toISOString()\n        };\n      }\n    },\n    deleteCategory: (state, action) => {\n      state.categories = state.categories.filter(category => category.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addCategory,\n  updateCategory,\n  deleteCategory\n} = categorySlice.actions;\nexport default categorySlice.reducer;","map":{"version":3,"names":["createSlice","defaultCategories","id","name","color","createdAt","Date","toISOString","updatedAt","initialState","categories","loading","error","categorySlice","reducers","addCategory","state","action","newCategory","payload","now","toString","push","updateCategory","updates","categoryIndex","findIndex","category","deleteCategory","filter","actions","reducer"],"sources":["/Users/sabafish1028/Programs/Hobby/task-manager/src/store/categorySlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Category, CategoryState } from '../types/category';\nimport { deleteTask } from './taskSlice';\n\nconst defaultCategories: Category[] = [\n  {\n    id: '1',\n    name: '仕事',\n    color: '#1976d2',\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '2',\n    name: 'プライベート',\n    color: '#dc004e',\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n  {\n    id: '3',\n    name: '学習',\n    color: '#388e3c',\n    createdAt: new Date().toISOString(),\n    updatedAt: new Date().toISOString(),\n  },\n];\n\nconst initialState: CategoryState = {\n  categories: defaultCategories,\n  loading: false,\n  error: null,\n};\n\nconst categorySlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    addCategory: (state, action: PayloadAction<Omit<Category, 'id' | 'createdAt' | 'updatedAt'>>) => {\n      const newCategory: Category = {\n        ...action.payload,\n        id: Date.now().toString(),\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n      state.categories.push(newCategory);\n    },\n    updateCategory: (state, action: PayloadAction<{ id: string; updates: Partial<Omit<Category, 'id' | 'createdAt'>> }>) => {\n      const { id, updates } = action.payload;\n      const categoryIndex = state.categories.findIndex(category => category.id === id);\n      if (categoryIndex !== -1) {\n        state.categories[categoryIndex] = {\n          ...state.categories[categoryIndex],\n          ...updates,\n          updatedAt: new Date().toISOString(),\n        };\n      }\n    },\n    deleteCategory: (state, action: PayloadAction<string>) => {\n      state.categories = state.categories.filter(category => category.id !== action.payload);\n    },\n  },\n});\n\nexport const { addCategory, updateCategory, deleteCategory } = categorySlice.actions;\nexport default categorySlice.reducer; "],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAI7D,MAAMC,iBAA6B,GAAG,CACpC;EACEC,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,SAAS;EAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,EACD;EACEL,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,SAAS;EAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,EACD;EACEL,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,SAAS;EAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;AACpC,CAAC,CACF;AAED,MAAME,YAA2B,GAAG;EAClCC,UAAU,EAAET,iBAAiB;EAC7BU,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGb,WAAW,CAAC;EAChCG,IAAI,EAAE,YAAY;EAClBM,YAAY;EACZK,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAuE,KAAK;MAC/F,MAAMC,WAAqB,GAAG;QAC5B,GAAGD,MAAM,CAACE,OAAO;QACjBjB,EAAE,EAAEI,IAAI,CAACc,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzBhB,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACpC,CAAC;MACDS,KAAK,CAACN,UAAU,CAACY,IAAI,CAACJ,WAAW,CAAC;IACpC,CAAC;IACDK,cAAc,EAAEA,CAACP,KAAK,EAAEC,MAA2F,KAAK;MACtH,MAAM;QAAEf,EAAE;QAAEsB;MAAQ,CAAC,GAAGP,MAAM,CAACE,OAAO;MACtC,MAAMM,aAAa,GAAGT,KAAK,CAACN,UAAU,CAACgB,SAAS,CAACC,QAAQ,IAAIA,QAAQ,CAACzB,EAAE,KAAKA,EAAE,CAAC;MAChF,IAAIuB,aAAa,KAAK,CAAC,CAAC,EAAE;QACxBT,KAAK,CAACN,UAAU,CAACe,aAAa,CAAC,GAAG;UAChC,GAAGT,KAAK,CAACN,UAAU,CAACe,aAAa,CAAC;UAClC,GAAGD,OAAO;UACVhB,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC,CAAC;MACH;IACF,CAAC;IACDqB,cAAc,EAAEA,CAACZ,KAAK,EAAEC,MAA6B,KAAK;MACxDD,KAAK,CAACN,UAAU,GAAGM,KAAK,CAACN,UAAU,CAACmB,MAAM,CAACF,QAAQ,IAAIA,QAAQ,CAACzB,EAAE,KAAKe,MAAM,CAACE,OAAO,CAAC;IACxF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,WAAW;EAAEQ,cAAc;EAAEK;AAAe,CAAC,GAAGf,aAAa,CAACiB,OAAO;AACpF,eAAejB,aAAa,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}